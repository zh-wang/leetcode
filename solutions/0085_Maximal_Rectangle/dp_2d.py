from typing import *

class Solution:
    def maximalRectangle(self, matrix: List[List[str]]) -> int:
        if len(matrix) == 0 or len(matrix[0]) == 0:
            return 0
        m, n = len(matrix), len(matrix[0])
        best = 0

        hist = [0] * n
        for i in range(m):
            for j in range(n):
                hist[j] = hist[j] + int(matrix[i][j]) if matrix[i][j] == '1' else 0
            print(hist)

        # for i in range(m):
            # print(str(hist[i]))

        return best

Solution().maximalRectangle(
[
    ["0","1","1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","0"],
    ["1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","0","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1"],
    ["1","1","1","0","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1"],
    ["1","0","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","0"],
    ["0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1"],
    ["1","1","0","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1"],
    ["0","1","1","0","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
    ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","0","1"],
    ["1","1","1","1","1","1","1","1","0","1","1","0","1","1","0","1","1","1","1"],
    ["1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","0","1","1","1"]]
        )
